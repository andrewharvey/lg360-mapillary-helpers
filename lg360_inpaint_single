#!/bin/bash

image=$1
b=`basename "$image" .jpg`
mask="${b}_mask.png"
if [ ! -f "$image" -o ! -f "$mask"  ] ; then
    echo "Usage: $0 image.jpg"
    if [ ! -f "$image" ] ; then
        echo "$image does not exist"
    fi
    if [ ! -f "$mask" ] ; then
        echo "$mask does not exist"
    fi
    exit
fi

output="${b}_inpaint.jpg"

small_inpainted=`mktemp --suffix '.jpg'`

# inpaint using a downsampled image, as it much faster and we don't need the quality
# https://zonderr.wordpress.com/2011/02/18/about-the-image-stack/ explains how the gmic image stack works and what the [n] references mean
# http://gmic.eu/reference.shtml#subsection10 documents the -inpaint options
gmic \
    $image \
    $mask \
    -resize[0,1] 10%,10% \
    -inpaint_patchmatch[0] [1],3,2,5,5,1,0 \
    -output[0] $small_inpainted 2>/dev/null

# combine the downsampled inpainted region back into the original full resolution image
convert \
    $image \
    $small_inpainted -geometry 5660x2830 \
    $mask \
    -composite $output

# convert drops exif, so add it back from the original file
exiftool \
    -quiet \
    -ignoreMinorErrors \
    -overwrite_original \
    -tagsFromFile $image \
    -ThumbnailImage= \
    $output

rm -f $small_inpainted
echo "$output"
